version: 2.1
jobs:
  test:
    working_directory: /app
    docker:
      - image: node:10-alpine
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Test
          command: yarn test
  build-and-deploy:
    working_directory: /app
    docker:
      - image: docker:17.09.0-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache curl
            apk add --no-cache curl-dev
            apk add --no-cache bash
            apk add  --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.7/main/ nodejs=8.9.3-r1
            curl https://cli-assets.heroku.com/install.sh | sh
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:  
          name: Login to Heroku Docker registy
          command: docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
      - run:
          name: Heroku Auth
          command: sh scripts/setup-heroku.sh
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Push to registry
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              heroku container:push web --app=$APP_NAME
            fi
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              heroku container:push web --app=$STAGING_APP_NAME
            fi
      - run:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              heroku container:release web --app=$APP_NAME
            fi
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              heroku container:release web --app=$STAGING_APP_NAME
            fi
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - dev
                - staging
                - master
      - build-and-deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - staging
                - master

